---
# Template for parsing interfaces from running configuration
# Operation System(s): IOS, IOS-XE
# Show Command(s): show running-config vlan
# Return Structure: Based on openconfig-vlan.yang model (Not a strict representation, applied internal extentions/devations)

- name: match config sections
  pattern_match:
    regex: "^vlan"
    match_all: yes
    match_greedy: yes
  register: config_context

- name: match vlan config values
  pattern_group:
    - name: match name
      pattern_match:
        regex: "name (\\S+)"
        content: "{{ item }}"
      register: name

    - name: match id
      pattern_match:
        regex: "^vlan (\\S+)"
        content: "{{ item }}"
      register: id

    - name: match status
      pattern_match:
        regex: "state (\\S+)"
        content: "{{ item }}"
      register: status
  loop: "{{ config_context }}"
  register: config_values

- name: template vlan config
  loop: "{{ config_values }}"
  register: vlans_config
  export: yes
  export_as: dict
  json_template:
    template:
      - key: vlans
        object:
          - key: vlan
            object:
              - key: "{{ item.id.matches.0 }}"
                object:
                  - key: vlan-id
                    value: "{{ item.id.matches.0 }}"
                  - key: config
                    object:
                      - key: name
                        value: "{{ item.name.matches.0 }}"
                      - key: vlan-id
                        value: "{{ item.id.matches.0 }}"
                      - key: status
                        value: "{{ item.status.matches is undefined | ternary ('ACTIVE', 'SUSPENDED') }}"
